Reprojection:
=============

* Old org.esa.beam.framework.dataop.maptransf still heavily in use!
  Remove usage, deprecate and/or remove classes.
  ==> FINAL, ?, OPEN
* (OF) VISAT is very slowly by handling reproj. data (saved in dim and reopend)
  (+ see bug 8 )
  
Masks:
======

* We need a special mask type masking out no-data pixels. If no-data value
  is set, it shall be used in its raw form by the mask image (OpImage).
  If valid-expression is set, it shall be AND-ed with the no-data mask,
  if any.
  ==> FINAL (v4.8), ?, OPEN
* We need a special mask type backed by a raster data buffer. Users shall
  be able to "paint" mask pixels (SYKE!). Also the "magic-stick" tool will #
  operate on such mask types. The raster data of the new mask type will need to
  be stored to disk.
  ==> FINAL (v4.8), ?, OPEN
* (OF) VISAT shall test for dependencies before deleting geometry from product tree must
   (see bug 7 in the textbuild.txt)
   
VectorDataNode:
===============
* Create subset from Product with Pins, GCPs -> GCPs outside of subset bounds are preserved, pins are not
  Explain in help, that this is intended.
  ==> FINAL, ?, OPEN
* Vector data node I/O shall encode/decode delimiter characters occurring in text converted from objects.
  ==> FINAL, MP/MZ, CLOSED
* Pin & GCP Vector Data Nodes shall not be visible as long as there are no pins / GCPs
  added to the product
  ==> FINAL, ?, OPEN
* Use SLD from shapefile for styling figures
  ==> FINAL, MZ, OPEN
* Export vector data node to shapefile
  ==> FINAL, MP, ONGOING (may exist: look into shapefile editor demo)
* Import of Geometry does not work when shapefile has no CRS and shapefile coordinates are not in WGS84.
  Explain in help, that this is intended. (better option would be to prompt the user to enter a CRS).
  ==> FINAL, ?, OPEN (see issue in Reprojection)
* (OF) VISAT does not know about existing colour of geometries
  open product containing (e.g.) blue geometry-1
  create geometry-2
  --> it will be blue, just like the geometry-1
  create new figure on the geometry-1
   --> it will not be blue

* "Profile plot" and "Coordinate List", are not updated when figure selection changes
  ==> FINAL, MP, CLOSED (REOPEN by OF: when draw a figure in reproj. product)

* (OF) IllegalArgumentException while creating spatial subset from reproj. dim product:
         open reproj. prod (dim) containing pins and geometries
         create spatial subset from view / new product
          --> IllegalArgumentException. subset will not be created.
         (see for details bug 4 in the testbuil.txt)
Exception in thread "AWT-EventQueue-0" java.lang.IllegalArgumentException: Points of LinearRing do not form a closed linestring
	at com.vividsolutions.jts.geom.LinearRing.validateConstruction(LinearRing.java:105)
	at com.vividsolutions.jts.geom.LinearRing.<init>(LinearRing.java:100)
	........................................
	==> FINAL, ?, OPEN
* (OF) NullPointerException occures while close session after deleting geometry
       (see for details bug 11 and 10)

Figures:
========
* Select-tool shall auto-select layer containing a clicked figure
  ==> FINAL, NF, OPEN
* Deprecate or even completely remove ald Figure + Tool classes
  ==> FINAL, ?, OPEN
* Still can't rotate figures.
  ==> FINAL, NF, OPEN
* Number of created vertex handles should be dependent on current viewport
  ==> FINAL, NF, OPEN
* Still can not add/remove geometry vertices
  ==> FINAL, NF, OPEN
* Still cannot draw true circles/squares and also adjust lines and points on grid.
  ==> FINAL, ?, OPEN
* Layer style editor doesn't work anymore
  ==> FINAL, MP, OPEN
* New edit menu:
  - Test Cut/Copy/Paste!
  - What about Undo/Redo?!? (should work!)
  - After Paste: select inserted figures and displace a few (view) pixels
  ==> FINAL, ?, OPEN
* Allow for geometric operations on geometries: add/sub/intersection (JTS!)
  ==> FINAL, ?, OPEN

Product tree:
=============
* Don't display empty groups
  ==> FINAL, ?, OPEN

Layers:
=======
* Graticule layer does not recognize preference changes (reported by Sean Bailey)
  Maybe this also affects other layer types ?
  ==> FINAL, ?, OPEN
* We once decided that we wanted to introduce static factory methods for each(!) layer type
  following the JAI-Descriptor concept. Nothing done so far.
  ==> FINAL, ?, OPEN
* Deprecate and/or remove old Layer class code
  ==> FINAL, ?, OPEN
* Don't use class names e.g. in Session I/O.
  ==> FINAL, ?, OPEN


GPF Processors:
===============
* Verify that Operator that terminate by throwing an exception and handled correctly. For all cases:
  [tile, tileStack] [gtp, graph, Visat]. Original problem reported by Luis Veci.
  ==> FINAL, MZ, OPEN  
* Need file and help menu items as in "old" processors
  ==> FINAL, ?, OPEN
* Need minimal developer guide  
  ==> FINAL, ?, OPEN
* Important issues with the band's source image:
  - dispose() method on MultiLevelImage shall not null its product node,
    use WeakReference instead.
  - Don't dispose source MultiLevelImage, if the RasterDataNode is not the
    owner, e.g. flag RasterDataNode.isSourceImageOwner()
  ==> FINAL, ?, OPEN
* Done, enable/harmonise geo-coding transfer in all GPF ops  (see BEAM-1047 and BEAM-1050)
  Changelog needs update.
  ==> FINAL, MP, OPEN
* Clean up GPF packages:
  - split into beam-gpf and beam-gpf-meris
  - move N1Patcher to ICOL
  - move common MERIS stuff from ICOL & Co. into beam-gpf-meris
  ==> FINAL, ?, OPEN

SMOS-Box:
=========
* Speed up statistics for virtual bands (Stokes etc.)
  ==> FINAL, RQ, OPEN
* We need the RasterDataNode.areaOfInterest:Geometry new property for boosting
  statistics computation and possibly also display. This property is optional but
  some product readers may set it, e.g. SMOS reader. Tile bounds can easily be
  tested for intersection with areaOfInterest and possibly ignored.
  Also very important for SMOS-Box 2.0.1
  ==> FINAL, *, OPEN
* (OF) Warning "Illegal element 'imageToModelTransform'" by open session
  open session
  -->
  VISAT-Warning: " The following problen(s) occured:
  Illegal element 'imageToModelTransform'
  However the session will be opened
  ==> FINAL, RQ, OPEN
* (OF) Pin table with band values is not updated when snapshot ID is changed
  ==> FINAL, RQ, OPEN

GlobToolbox
===========
* Create add on installer
  ==> FINAL, MP, OPEN

CHRIS-GeoCorrection
===================
* Auto-Download Telemetry
  ==> FINAL, RQ, OPEN
* NullPointerException after map-projection if not saved to file
  ==> FINAL, RQ, OPEN

Envisat Reprocessing 3:
=======================
* Format update
  Note: [BEAM-1070]
  ==> FINAL (v4.7.x), *, OPEN

Other BEAM/VISAT/API Stuff:
===========================
* When loading our OBPG Level-2 data products pixel times are not
  displayed and the No-Data Overlay doesn't work for missing data (e.g.
  after reprojecting L2 chlor_a, the missing pixels in the resulting map
  are not detected as missing)  (reported by Sean Bailey)
  ==> FINAL, ?, OPEN
* Rename 'Pin' into 'Placemark'
  ==> FINAL, NF, OPEN
* Auto-insert BlueMarble (if WSG-84 lat/lon) and Country shapes
  ==> FINAL, *, OPEN
* Avoid adding too much node listeners to a product:
  - abstract ProductNode.handleRename(node, oldName, newName)
  - abstract ProductNode.handleNodeDataChanged(node, oldName, newName)
  ==> FINAL, *, OPEN
* Move PropertyPane and dependency to TableLayout into Ceres
  ==> FINAL, *, OPEN


//////////////////////////////////////////////////////////////////////////////////////
// TODO put in Wiki

h2. API changes:

h3. Product Data Model Changes
* Introduced Mask class
* Introduced VectorDataNode class
* Product class
** Added new methods to Product class
**# ProductNodeGroup<VectorData> getVectorDataGroup()
**# ProductNodeGroup<Mask> getMaskGroup()
** Deprecated a lot of old methods deling with {{BitRaster}} and bitmasks in general
** Change events for the following "properties" are not fired anymore: modified, owner 
* Added new methods to ProductVisitor interface:
*# void visit(Mask mask)
*# void visit(VectorDataNode dataNode)
* ProductNode class
** Rename updateExpression(s1, s2) to handleRename(node, s1, s2)  (TODO!)

h3. Ceres Binding API Changes

* Terminology changes followed by extensive renamings:
** ValueModel --> Property
** ValueDescriptor --> PropertyDescriptor
** ValueContainer --> PropertyContainer
** ValueAccessor --> PropertyAccessor
** ClassFieldDescriptorFactory --> PropertyDescriptorFactory
** ValueDescriptor.properties --> PropertyDescriptor.attributes (incl. all accessors)
* New interface PropertyAccessorFactory
* PropertyContainer.setValue(String propertyName, Object value) now throws IllegalArgumentException
 by wrapping a previously thrown ValidationException.

* PropertySet is an interface which has been extracted from PropertyContainer.
  Thus, in many places (including public BEAM API) the use of PropertyContainer has been replaced by PropertySet

* ValueEditor --> PropertyEditor
* ValueEditorRegistry --> PropertyEditorRegistry
* ValueEditorsPane --> PropertyPane


h3. Ceres Layer API Changes

* Renamed method LayerType.getConfigurationTemplate() to  createLayerConfig()
* Moved methods LayerType.createDefaultValueModel() ValueModel.createValueModel()

h3. Ceres Core API Changes
* Renamed class ServiceRegistryFactory to ServiceRegistryManager
