CrsGeoCoding:
=============
Stupid name because GeoCoding *has* a CRS, it isn't one. CrsGeoCoding is the GeoTools replacement for MapGeoCoding!!

GeoCoding.getDatum():
=====================
It is still the "old" BEAM Datum and should have already been replaced by the GeoTools one.

<X>LayerType:
=============
We once decided that we wanted to introduce static factory method for each(!) layer type following the JAI-Descriptor
concept. Nothing done so far.

Rectangle RasterDataNode.areaOfInterest:
========================================
We need this new property for boosting statitics computation and possibly also display.
This property is optional but some product readers may set it, e.g. SMOS reader.
Tile bounds can easily be tesated for intersection with areaOfInterest and possibly ignored. 

FeatureLayer:
=============

Several problems:
- Target-CRS called FC-CRS, which is actually a view CRS.
- Clipping done against WGS84-CRS geometry if and only if feature ceollection has not been loaded from a shapefile (?!?).

Mask DIMAP I/O
==============
- Product.masks
- RasterDataNode.imageInfo.maskReferenceList



h2. API changes:

h3. Product Data Model Changes
* Introduced Mask class
* Introduced VectorDataNode class
* Product class
** Added new methods to Product class
**# ProductNodeGroup<VectorData> getVectorDataGroup()
**# ProductNodeGroup<Mask> getMaskGroup()
** Deprecated a lot of old methods deling with {{BitRaster}} and bitmasks in general
** Change events for the following "properties" are not fired anymore: modified, owner 
* Added new methods to ProductVisitor interface:
*# void visit(Mask mask)
*# void visit(VectorDataNode dataNode)
* ProductNode class
** Rename updateExpression(s1, s2) to handleRename(node, s1, s2)  (TODO!)

h3. Ceres Binding API Changes

* ValueContainer.setValue(String propertyName, Object value) now throws IllegalArgumentException
 by wrapping a previously thrown ValidationException.


h3. Ceres Layer API Changes

* Renamed LayerType.getConfigurationTemplate() to  createLayerConfiguration()