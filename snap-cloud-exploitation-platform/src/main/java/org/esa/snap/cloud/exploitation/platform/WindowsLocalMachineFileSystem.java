package org.esa.snap.cloud.exploitation.platform;

import org.apache.commons.lang.StringUtils;
import org.esa.snap.cloud.exploitation.platform.executors.OutputConsoleBuffer;
import org.esa.snap.cloud.exploitation.platform.executors.ProcessExecutor;

import java.io.IOException;

/**
 * Created by jcoravu on 13/3/2019.
 */
public class WindowsLocalMachineFileSystem implements ILocalMachineFileSystem {

    public WindowsLocalMachineFileSystem() {
    }

    @Override
    public char getFileSeparator() {
        return '\\';
    }

    @Override
    public String normalizeFileSeparator(String path) {
        return normalizeWindowsPath(path);
    }

    @Override
    public boolean pathStartsWith(String path, String prefix) {
        return StringUtils.startsWithIgnoreCase(path, prefix);
    }

    @Override
    public String findPhysicalSharedFolderPath(String shareNameToFind, String localPassword) throws IOException {
        String command = "net share " + shareNameToFind;
        OutputConsoleBuffer outputConsole = new OutputConsoleBuffer();
        int exitStatus = ProcessExecutor.executeWindowsCommand(command, null, outputConsole);
        if (exitStatus == 0) {
            String[] normalOutput = outputConsole.getNormalStreamMessages().split("\n");
            String key = "Path ";
            String pathLine = null;
            for (int i = 0; i < normalOutput.length && pathLine == null; i++) {
                if (normalOutput[i].startsWith(key)) {
                    return normalOutput[i].substring(key.length()).trim();
                }
            }
        }
        return null;
    }

    public static String normalizeWindowsPath(String path) {
        return path.replace('/', '\\');
    }
}
